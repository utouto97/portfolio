{"version":3,"sources":["globalStyles.tsx","theme.tsx","header.jpg","Header.tsx","data/works.tsx","data/header.jpg","Works.tsx","data/skills.tsx","Skills.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["createGlobalStyle","theme","createMuiTheme","palette","primary","main","purple","typography","fontFamily","useStyles","makeStyles","createStyles","paper","paddingTop","spacing","backgroundImage","headerImg","backgroundSize","textAlign","twittericon","margin","color","backgroundColor","githubicon","blogicon","Header","classes","Paper","className","Grid","container","direction","item","justify","Typography","variant","IconButton","component","href","works","image","title","description","root","maxWidth","media","height","cardcontent","cardtext","whiteSpace","WorkCard","props","Card","CardActionArea","CardMedia","CardContent","Box","m","Works","map","work","i","skills","Skills","List","skill","ListItem","ListItemAvatar","icon","ListItemText","pri","secondary","sec","totop","position","bottom","right","App","useState","scroll","setScroll","scrollListener","Math","max","window","pageYOffset","document","documentElement","scrollTop","body","useEffect","addEventListener","Fragment","md","onClick","scrollTo","top","behavior","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3c826a3e.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`@import url('https://fonts.googleapis.com/css2?family=M+PLUS+Rounded+1c:wght@500&display=swap');`\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: purple[500],\n    }\n  },\n  typography: {\n    fontFamily: '\"M PLUS Rounded 1c\", \"sans-serif\"'\n  }\n});\n\nexport default theme;\n","export default __webpack_public_path__ + \"static/media/header.d560188c.jpg\";","import React from 'react';\n\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport BookIcon from '@material-ui/icons/Book';\n\nimport headerImg from './header.jpg';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    paper: {\n      paddingTop: theme.spacing(4),\n      backgroundImage: `url(${headerImg})`,\n      backgroundSize: 'cover',\n      textAlign: 'center',\n    },\n    twittericon: {\n      margin: theme.spacing(1),\n      color: '#FFFFFF',\n      backgroundColor: '#1DA1F2',\n      \"&:hover\": {\n        color: '#1DA1F2'\n      }\n    },\n    githubicon: {\n      margin: theme.spacing(1),\n      color: '#FFFFFF',\n      backgroundColor: '#000000',\n      \"&:hover\": {\n        color: '#000000'\n      }\n    },\n    blogicon: {\n      margin: theme.spacing(1),\n      color: '#FFFFFF',\n      backgroundColor: '#2DBE60',\n      \"&:hover\": {\n        color: '#2DBE60'\n      }\n    },\n  })\n);\n\nconst Header = () => {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.paper}>\n      <Grid container direction='column' spacing={2}>\n        <Grid container item justify='center'>\n          <Grid item>\n            <Typography variant='h2'>\n              First Last\n            </Typography>\n          </Grid>\n        </Grid>\n        <Grid container item justify='center'>\n          <Grid item>\n            <Typography variant='h5'>\n              bio bio bio bio bio <br />\n              bio bio bio bio bio <br />\n              bio bio bio bio bio <br />\n              bio bio bio bio bio <br />\n              bio bio bio bio bio <br />\n            </Typography>\n          </Grid>\n        </Grid>\n        <Grid container item justify='center'>\n          <Grid item>\n            <IconButton className={classes.twittericon} component='a' href='https://twitter.com'>\n              <TwitterIcon />\n            </IconButton>\n            <IconButton className={classes.githubicon} component='a' href='https://github.com'>\n              <GitHubIcon />\n            </IconButton>\n            <IconButton className={classes.blogicon} component='a' href='https://qiita.com'>\n              <BookIcon />\n            </IconButton>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Paper >\n  );\n};\n\nexport default Header;\n","import headerImg from './header.jpg';\n\nconst works = [\n  {\n    image: headerImg,\n    title: \"このポートフォリオ\",\n    description: \"使ったもの\\n ・React\\n ・Typescript\\n ・@material-ui\",\n    href: \"https://google.com\"\n  },\n  {\n    image: \"\",\n    title: \"ねこ、ねこ、ねこ\",\n    description: \"外部API (https://xxxxx.com) 使用\",\n    href: \"htttps://google.com\"\n  },\n  {\n    image: \"\",\n    title: \"ねこ、ねこ、ねこ\",\n    description: \"外部API (https://xxxxx.com) 使用\",\n    href: \"htttps://google.com\"\n  },\n  {\n    image: \"\",\n    title: \"ねこ、ねこ、ねこ\",\n    description: \"外部API (https://xxxxx.com) 使用\",\n    href: \"htttps://google.com\"\n  },\n  {\n    image: \"\",\n    title: \"ねこ、ねこ、ねこ\",\n    description: \"外部API (https://xxxxx.com) 使用\",\n    href: \"htttps://google.com\"\n  },\n  {\n    image: \"\",\n    title: \"ねこ、ねこ、ねこ\",\n    description: \"外部API (https://xxxxx.com) 使用\",\n    href: \"htttps://google.com\"\n  },\n];\n\nexport default works;\n","export default __webpack_public_path__ + \"static/media/header.d560188c.jpg\";","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core';\n\nimport works from './data/works';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      maxWidth: 345,\n    },\n    media: {\n      height: 140,\n      backgroundColor: \"#DCDCDC\"\n    },\n    cardcontent: {\n      margin: theme.spacing(1)\n    },\n    cardtext: {\n      whiteSpace: 'pre-wrap'\n    }\n  })\n);\n\ntype WorkCardProps = {\n  image: string,\n  title: string,\n  description: string,\n  href: string,\n};\n\nconst WorkCard = (props: WorkCardProps) => {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea href={props.href}>\n        <CardMedia className={classes.media} image={props.image} />\n        <CardContent className={classes.cardcontent}>\n          <Typography variant='h5'>\n            {props.title}\n          </Typography>\n          <Box m={1} />\n          <Typography variant='body2' className={classes.cardtext}>\n            {props.description}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n};\n\nconst Works = () => {\n  return (\n    <Grid container direction='column' spacing={2}>\n      <Grid container item justify='center'>\n        <Grid item>\n          <Typography variant='h3'>\n            Works\n          </Typography>\n        </Grid>\n      </Grid>\n      <Grid container item justify='center' spacing={4}>\n        {works.map((work: WorkCardProps, i: number) => (\n          <Grid item key={i}>\n            <WorkCard {...work} />\n          </Grid>\n        ))}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Works;\n","import WorkIcon from '@material-ui/icons/Work';\n\nconst skills = [\n  {\n    \"pri\": \"C++\",\n    \"sec\": \"Use for competitive programming\",\n    \"icon\": \"C++\"\n  },\n  {\n    \"pri\": \"基本情報技術者試験\",\n    \"sec\": \"合格\",\n    \"icon\": \"FE\"\n  },\n  {\n    \"pri\": \"Python\",\n    \"sec\": \"Research for bachelor and master, Neural Network (Keras or Pytorch)\",\n    \"icon\": \"py\"\n  },\n  {\n    \"pri\": \"仕事上のスキル\",\n    \"sec\": \"なんだろう\",\n    \"icon\": <WorkIcon />\n  }\n];\n\nexport default skills;\n","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avater from '@material-ui/core/Avatar';\n\n\nimport skills from './data/skills';\n\ntype SkillType = {\n  pri: string,\n  sec: string,\n  icon: string | React.ReactElement\n};\n\nconst Skills = () => {\n  return (\n    <Grid container direction='column' spacing={2}>\n      <Grid container item justify='center'>\n        <Grid item>\n          <Typography variant='h3'>\n            Skills\n          </Typography>\n        </Grid>\n      </Grid>\n      <Grid container item justify='center'>\n        <Grid item>\n          <List>\n            {skills.map((skill: SkillType, i: number) => (\n              <ListItem key={i}>\n                <ListItemAvatar>\n                  <Avater>\n                    {skill.icon}\n                  </Avater>\n                </ListItemAvatar>\n                <ListItemText primary={skill.pri} secondary={skill.sec} />\n              </ListItem>\n            ))}\n          </List>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Skills;\n","import React, { useEffect, useState } from 'react';\n\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\n\nimport GlobalStyle from './globalStyles';\nimport theme from './theme';\nimport Header from './Header';\nimport Works from './Works';\nimport Skills from './Skills';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    totop: {\n      position: 'fixed',\n      bottom: theme.spacing(2),\n      right: theme.spacing(2)\n    }\n  })\n);\n\nconst App = () => {\n  const classes = useStyles();\n\n  const scrollTop = () => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  const [scroll, setScroll] = useState(0);\n\n  const scrollListener = () => {\n    setScroll(Math.max(\n      window.pageYOffset,\n      document.documentElement.scrollTop,\n      document.body.scrollTop));\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', scrollListener);\n  }, []);\n\n  return (\n    <React.Fragment>\n      <GlobalStyle />\n      <MuiThemeProvider theme={theme}>\n        <Grid container direction='column' spacing={4}>\n          <Grid item> <Header /> </Grid>\n          <Grid item> <Skills /> </Grid>\n          <Grid container item justify='center'>\n            <Grid md={10}> <Works /> </Grid>\n          </Grid>\n        </Grid>\n        {(scroll > 0) && (\n          <IconButton className={classes.totop} onClick={scrollTop}>\n            <ArrowUpwardIcon />\n          </IconButton>\n        )}\n      </MuiThemeProvider>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}