{"version":3,"sources":["globalStyles.tsx","theme.tsx","header.jpg","Header.tsx","Work.tsx","Skills.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["createGlobalStyle","theme","createMuiTheme","palette","primary","main","purple","typography","fontFamily","useStyles","makeStyles","createStyles","paper","paddingTop","spacing","backgroundImage","headerImg","backgroundSize","textAlign","twittericon","margin","color","backgroundColor","githubicon","blogicon","Header","classes","Paper","className","Grid","container","direction","item","justify","Typography","variant","IconButton","component","href","Work","Fragment","style","md","Card","CardContent","skills","require","Icon","props","type","Skills","List","map","skill","i","ListItem","ListItemAvatar","icon","ListItemText","pri","secondary","sec","totop","position","bottom","right","App","onClick","window","scrollTo","top","behavior","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68da2d56.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`@import url('https://fonts.googleapis.com/css2?family=M+PLUS+Rounded+1c:wght@500&display=swap');`\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: purple[500],\n    }\n  },\n  typography: {\n    fontFamily: '\"M PLUS Rounded 1c\", \"sans-serif\"'\n  }\n});\n\nexport default theme;\n","export default __webpack_public_path__ + \"static/media/header.d560188c.jpg\";","import React from 'react';\n\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport BookIcon from '@material-ui/icons/Book';\n\nimport headerImg from './header.jpg';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    paper: {\n      paddingTop: theme.spacing(4),\n      backgroundImage: `url(${headerImg})`,\n      backgroundSize: 'cover',\n      textAlign: 'center',\n    },\n    twittericon: {\n      margin: theme.spacing(1),\n      color: '#FFFFFF',\n      backgroundColor: '#1DA1F2',\n      \"&:hover\": {\n        color: '#1DA1F2'\n      }\n    },\n    githubicon: {\n      margin: theme.spacing(1),\n      color: '#FFFFFF',\n      backgroundColor: '#000000',\n      \"&:hover\": {\n        color: '#000000'\n      }\n    },\n    blogicon: {\n      margin: theme.spacing(1),\n      color: '#FFFFFF',\n      backgroundColor: '#2DBE60',\n      \"&:hover\": {\n        color: '#2DBE60'\n      }\n    },\n  })\n);\n\nconst Header = () => {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.paper}>\n      <Grid container direction='column' spacing={2}>\n        <Grid container item justify='center'>\n          <Grid item>\n            <Typography variant='h2'>\n              First Last\n            </Typography>\n          </Grid>\n        </Grid>\n        <Grid container item justify='center'>\n          <Grid item>\n            <Typography variant='h5'>\n              bio bio bio bio bio <br />\n              bio bio bio bio bio <br />\n              bio bio bio bio bio <br />\n              bio bio bio bio bio <br />\n              bio bio bio bio bio <br />\n            </Typography>\n          </Grid>\n        </Grid>\n        <Grid container item justify='center'>\n          <Grid item>\n            <IconButton className={classes.twittericon} component='a' href='https://twitter.com'>\n              <TwitterIcon />\n            </IconButton>\n            <IconButton className={classes.githubicon} component='a' href='https://twitter.com'>\n              <GitHubIcon />\n            </IconButton>\n            <IconButton className={classes.blogicon} component='a' href='https://twitter.com'>\n              <BookIcon />\n            </IconButton>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Paper >\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst Work = () => {\n  return (\n    <React.Fragment>\n      <Typography variant='h3' style={{ textAlign: 'center' }}>\n        Work\n      </Typography>\n      <Grid container spacing={4}>\n        <Grid item md={6}>\n          <Card>\n            <CardContent>\n              <Typography variant='h3'>\n                Work 1\n        </Typography>\n              <Typography variant='body2'>\n                discription discription discription discription\n                discription discription discription discription\n                discription discription discription discription\n                discription discription discription discription\n        </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item md={6}>\n          <Card>\n            <CardContent>\n              <Typography variant='h3'>\n                Work 2\n        </Typography>\n              <Typography variant='body2'>\n                discription discription discription discription\n                discription discription discription discription\n                discription discription discription discription\n                discription discription discription discription\n        </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default Work;\n","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avater from '@material-ui/core/Avatar';\n\nimport WorkIcon from '@material-ui/icons/Work';\nimport CodeIcon from '@material-ui/icons/Code';\nimport VerifiedUserOutlinedIcon from '@material-ui/icons/VerifiedUserOutlined';\n\nconst skills = require('./skill.json');\n\ntype SkillType = {\n  pri: string,\n  sec: string,\n  icon: string\n};\n\ntype IconProps = {\n  type: string\n};\n\nconst Icon = (props: IconProps) => {\n  switch (props.type) {\n    case \"code\":\n      return <CodeIcon />\n    case \"verified\":\n      return <VerifiedUserOutlinedIcon />\n  }\n  return <WorkIcon />\n};\n\nconst Skills = () => {\n  return (\n    <Grid container direction='column' spacing={2}>\n      <Grid container item justify='center'>\n        <Grid item>\n          <Typography variant='h3'>\n            Skills\n          </Typography>\n        </Grid>\n      </Grid>\n      <Grid container item justify='center'>\n        <Grid item>\n          <List>\n            {skills.map((skill: SkillType, i: number) => {\n              return (<ListItem key={i}>\n                <ListItemAvatar>\n                  <Avater>\n                    <Icon type={skill.icon} />\n                  </Avater>\n                </ListItemAvatar>\n                <ListItemText primary={skill.pri} secondary={skill.sec} />\n              </ListItem>)\n            })}\n          </List>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Skills;\n","import React from 'react';\n\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\n\nimport GlobalStyle from './globalStyles';\nimport theme from './theme';\nimport Header from './Header';\nimport Work from './Work';\nimport Skills from './Skills';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    totop: {\n      position: 'fixed',\n      bottom: theme.spacing(2),\n      right: theme.spacing(2)\n    }\n  })\n);\n\nconst App = () => {\n  const classes = useStyles();\n\n  const scrollTop = () => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  return (\n    <React.Fragment>\n      <GlobalStyle />\n      <MuiThemeProvider theme={theme}>\n        <Grid container direction='column' spacing={4}>\n          <Grid item> <Header /> </Grid>\n          <Grid item> <Skills /> </Grid>\n          <Grid item> <Work /> </Grid>\n        </Grid>\n        <IconButton className={classes.totop} onClick={scrollTop}>\n          <ArrowUpwardIcon />\n        </IconButton>\n      </MuiThemeProvider>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}